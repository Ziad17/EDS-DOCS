CREATE TABLE Person (
  ID INT IDENTITY(1, 1) PRIMARY KEY NOT NULL,
  first_name varchar(30) NOT NULL,
  middle_name varchar(50),
  last_name varchar(30) NOT NULL,
  user_password VARCHAR(40) NOT NULL,
  contact_email VARCHAR(300) UNIQUE,
  acadmeic_number VARCHAR(16) UNIQUE,
  gender VARCHAR NOT NULL,
  city_shortcut VARCHAR(5) NOT NULL UNIQUE);

CREATE TABLE City(
  shortcut VARCHAR(5) PRIMARY KEY NOT NULL,
  city_name VARCHAR(200) NOT NULL UNIQUE,
  postal_code INT NOT NULL UNIQUE);

CREATE TABLE PersonContacts(
email VARCHAR(300) PRIMARY KEY NOT NULL,
phone_number VARCHAR(11) UNIQUE,
phd_certificate VARCHAR(200),
image_ref VARCHAR(1000) UNIQUE,
bio TEXT);


CREATE TABLE PersonRoles(
    /**/
    person_id INT NOT NULL,
  employee_title VARCHAR(200) NOT NULL ,
  institution_id INT NOT NULL ,
  hiring_date DATETIME NOT NULL,
  active BIT NOT NULL
);

CREATE TABLE PersonPermissions(
bit_value INT NOT NULL PRIMARY KEY,
permission_name VARCHAR(200) NOT NULL UNIQUE
);


CREATE TABLE EmployeesHierarchy(
  title VARCHAR(200) NOT NULL PRIMARY KEY,
  priority_lvl INT NOT NULL,
  permissions_sum INT NOT NULL,
  job_description TEXT
);

CREATE TABLE PersonActionLogs(
  affecter_person_id INT NOT NULL,
  affected_person_id INT NOT NULL,
  action_date DATETIME NOT NULL,
  permission_action_performed INT NOT NULL
);

CREATE TABLE NotificationTypes(
  notification_name VARCHAR(100) NOT NULL PRIMARY KEY
);


CREATE TABLE PersonNotification(
  person_id INT NOT NULL,
  notification_type VARCHAR(100) NOT NULL,
  seen BIT NOT NULL,
  file_id INT NOT NULL,
  notification_maker_id INT NOT NULL,
  date_created DATETIME NOT NULL 
);

CREATE TABLE Attachments(
  ID INT IDENTITY(1, 1) PRIMARY KEY NOT NULL,
  sender_id INT NOT NULL,
  receiver_id INT NOT NULL,
  attachment_file_type VARCHAR(50) NOT NULL,
  date_sent DATETIME NOT NULL,
  notes TEXT,
  attachment_content_id INT NOT NULL,
  seen BIT NOT NULL
);

CREATE TABLE Institution(
  ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  institution_name VARCHAR(300) NOT NULL UNIQUE,
  institution_contacts_website VARCHAR(1000) NOT NULL UNIQUE,
  inside_campus BIT NOT NULL,
  institution_active BIT NOT NULL);

CREATE TABLE InstitutionContacts(
  website_url VARCHAR(1000) NOT NULL PRIMARY KEY,
  primary_phone VARCHAR(300),
  secondary_phone VARCHAR(300),
  fax VARCHAR(300),
  email VARCHAR(300));




CREATE TABLE Folder(
ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
parent_folder_id INT NOT NULL,
date_created DATETIME NOT NULL,
author_id INT NOT NULL,
current_folder_version INT NOT NULL UNIQUE

);

CREATE TABLE FolderVersion(
ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
version_name VARCHAR(200) NOT NULL,
version_notes VARCHAR(1000),
version_number FLOAT,
folder_id INT NOT NULL,
date_created DATETIME NOT NULL ,
author_id INT NOT NULL
);

CREATE TABLE [File](
ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
parent_folder_id INT NOT NULL,
date_created DATETIME NOT NULL ,
author_id INT NOT NULL,
current_file_version INT NOT NULL UNIQUE
);

CREATE TABLE FileType(
type_name VARCHAR(50) NOT NULL PRIMARY KEY,
extension VARCHAR(10) NOT NULL UNIQUE
);


CREATE TABLE FileVersion(
ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
file_id INT NOT NULL,
version_name VARCHAR(200) NOT NULL,
version_notes VARCHAR(1000),
version_number FLOAT,
date_created DATETIME NOT NULL,
author_id INT NOT NULL,
file_type_extension VARCHAR(10) NOT NULL,
file_content_id INT NOT NULL UNIQUE
);


CREATE TABLE FileContent(
ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
href VARCHAR(3000) NOT NULL,
file_size INT NOT NULL
);

CREATE TABLE PersonFolderRoles(
  person_id INT NOT NULL,
  folder_id INT NOT NULL,
  folder_permissions_sum INT NOT NULL,
  exp_date DATETIME NOT NULL
);

CREATE TABLE PersonFileRoles(
  person_id INT NOT NULL,
  file_id INT NOT NULL,
  file_permissions_sum INT NOT NULL,
  exp_date DATETIME NOT NULL
);

CREATE TABLE FilePermissions(
  bit_value INT NOT NULL PRIMARY KEY,
permission_name VARCHAR(200) NOT NULL UNIQUE
);

CREATE TABLE FolderPermissions(
  bit_value INT NOT NULL PRIMARY KEY,
permission_name VARCHAR(200) NOT NULL UNIQUE
);

/*Person Table*/
ALTER TABLE Person
ADD FOREIGN KEY (contact_email) REFERENCES PersonContacts(email);

ALTER TABLE Person
ADD FOREIGN KEY (city_shortcut) REFERENCES City(shortcut);




/* PersonRoles Table*/
ALTER TABLE PersonRoles
ADD FOREIGN KEY (person_id) REFERENCES Person(ID);
ALTER TABLE PersonRoles
ADD FOREIGN KEY (employee_title) REFERENCES EmployeesHierarchy(title);
ALTER TABLE PersonRoles
ADD FOREIGN KEY (institution_id) REFERENCES Institution(ID);



/* PersonActionLogs Table*/
ALTER TABLE PersonActionLogs
ADD FOREIGN KEY (affecter_person_id) REFERENCES Person(ID);
ALTER TABLE PersonActionLogs
ADD FOREIGN KEY (affected_person_id) REFERENCES Person(ID);
ALTER TABLE PersonActionLogs
ADD FOREIGN KEY (permission_action_performed) REFERENCES PersonPermissions(bit_value);

/* PersonNotification Table*/
ALTER TABLE PersonNotification
ADD FOREIGN KEY (person_id) REFERENCES Person(ID);
ALTER TABLE PersonNotification
ADD FOREIGN KEY (notification_type) REFERENCES NotificationTypes(notification_name);
ALTER TABLE PersonNotification
ADD FOREIGN KEY (file_id) REFERENCES [File](ID);
ALTER TABLE PersonNotification
ADD FOREIGN KEY (notification_maker_id) REFERENCES Person(ID);


/* Attachments Table*/
ALTER TABLE Attachments
ADD FOREIGN KEY (sender_id) REFERENCES Person(ID);
ALTER TABLE Attachments
ADD FOREIGN KEY (receiver_id) REFERENCES Person(ID);
ALTER TABLE Attachments
ADD FOREIGN KEY (attachment_file_type) REFERENCES FileType(type_name);
ALTER TABLE Attachments
ADD FOREIGN KEY (attachment_content_id) REFERENCES FileContent(ID);




/*Institution Table*/
ALTER TABLE Institution
ADD FOREIGN KEY (institution_contacts_website) REFERENCES InstitutionContacts(website_url);




/*Folder Table*/
ALTER TABLE Folder
ADD FOREIGN KEY (parent_folder_id) REFERENCES Folder(ID);
ALTER TABLE Folder
ADD FOREIGN KEY (author_id) REFERENCES Person(ID);
ALTER TABLE Folder
ADD FOREIGN KEY (current_folder_version) REFERENCES FolderVersion(ID);

/*FolderVersion Table*/
ALTER TABLE FolderVersion
ADD FOREIGN KEY (folder_id) REFERENCES Folder(ID);
ALTER TABLE FolderVersion
ADD FOREIGN KEY (author_id) REFERENCES Person(ID);


/*File Table*/
ALTER TABLE [File]
ADD FOREIGN KEY (parent_folder_id) REFERENCES Folder(ID);
ALTER TABLE [File]
ADD FOREIGN KEY (author_id) REFERENCES Person(ID);
ALTER TABLE [File] 
ADD FOREIGN KEY (current_file_version) REFERENCES FileVersion(ID);


/*FileVersion Table*/
ALTER TABLE FileVersion
ADD FOREIGN KEY (file_id) REFERENCES [File](ID);
ALTER TABLE FileVersion
ADD FOREIGN KEY (author_id) REFERENCES Person(ID);
ALTER TABLE FileVersion
ADD FOREIGN KEY (file_type_extension) REFERENCES FileType(extension);
ALTER TABLE FileVersion
ADD FOREIGN KEY (file_content_id) REFERENCES FileContent(ID);


/*PersonFolderRoles Table*/
ALTER TABLE PersonFolderRoles
ADD FOREIGN KEY (folder_id) REFERENCES Folder(ID);
ALTER TABLE PersonFolderRoles
ADD FOREIGN KEY (person_id) REFERENCES Person(ID);


/*PersonFileRoles Table*/
ALTER TABLE PersonFileRoles
ADD FOREIGN KEY (file_id) REFERENCES File(ID);
ALTER TABLE PersonFolderRoles
ADD FOREIGN KEY (person_id) REFERENCES Person(ID);





